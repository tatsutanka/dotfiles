set icons true
set hidden true
set color256 true
# custom functions

cmd open ${{
    case $(file --mime-type "$f" -bL) in
        text/*|application/json) $EDITOR "$f";;
        image/*) sxiv "$f" & disow ;;
        application/pdf ) evince "$f" & disow;;
        video/*) xdg-open "$f" & disown;;
        *) xdg-open "$f" ;;
    esac
}}


cmd mkdir ${{
  printf "Directory Name: "
  read ans
  mkdir $ans
}}

cmd mkfile ${{
  printf "File Name: "
  read ans
  $EDITOR $ans
}}

cmd sudomkfile ${{
  printf "File Name: "
  read ans
  sudo $EDITOR $ans
}}

cmd chmod ${{
  printf "Mode Bits: "
  read ans

  for file in "$fx"
  do
    chmod $ans $file
  done
}}

cmd open_config  ${{
  $EDITOR $LF_CONFIG_LOCATION
}}

cmd zle-cd %printf 'cd %q && zle reset-prompt\n' "$PWD" >&$ZLE_FIFO

cmd zle-insert-relative %{{
    for f in $fx; do
        printf 'LBUFFER+="${LBUFFER:+ }${(q)$(realpath %q --relative-to=$PWD)}"\n' "$f" >&$ZLE_FIFO
    done
}}

cmd zle-insert-absolute %{{
    for f in $fx; do
        printf 'LBUFFER+="${LBUFFER:+ }%q"\n' "$f" >&$ZLE_FIFO
    done
}}

cmd zle-init :{{
    map cd zle-cd
    map a zle-insert-relative
    map A zle-insert-absolute
}}

&[[ -n "$ZLE_FIFO" ]] && lf -remote "send $id zle-init"

# cmd setwallpaper %:{{
#     rm $HOME/.config/wallpaper.jpg
#     cp "$f" $HOME/.config && mv "$f" wallpaper.jpg
# }}

# File Openers
map ee nvim "$f"

# Remove some defaults
map m
map o
map n
map "'"
map '"'
map d
map c
map e
map f

# Basic Functions
map . set hidden!
map DD delete
map p paste
map x cut
map y copy
map <enter> open
map mf mkfile
map mr sudomkfile
map md mkdir
#map ms $mkscript
map ch chmod
map bg setwallpaper
map o open_config
map r rename
map H top
map L bottom
map R reload
map C clear
map U unselect

map gD cd ~/Downloads
map ge cd ~/Desktop
map gc cd ~/.config
map gi cd ~/Pictures
map gt cd ~/Documents
map gd cd ~/dotfiles

map u sxiv "$f"
